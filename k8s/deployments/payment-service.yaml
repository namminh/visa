---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: mini-visa
  labels:
    app: payment-service
    version: v1.0.0
    tier: core
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: payment-service
        image: mini-visa/payment-service:v1.0.0
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: PORT
        - name: THREADS
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: THREADS
        - name: QUEUE_CAP
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: QUEUE_CAP
        - name: DB_URI
          valueFrom:
            secretKeyRef:
              name: payment-db-secret
              key: DB_URI
        - name: RISK_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: RISK_SERVICE_URL
        - name: CLEARING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: payment-service-config
              key: CLEARING_SERVICE_URL
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 10001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: payment-service-sa